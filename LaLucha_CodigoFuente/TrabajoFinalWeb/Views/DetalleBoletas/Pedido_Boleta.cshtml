@model TrabajoFinalWeb.Models.DetalleBoleta

<style>
    #map {
        height: 600px;
        width: 900px;
    }

    input[type=text] {
        background-color: #fff;
        border: 0;
        border-radius: 2px;
        box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
        margin: 10px;
        padding: 0 0.5em;
        font: 400 18px Roboto, Arial, sans-serif;
        overflow: hidden;
        line-height: 40px;
        margin-right: 0;
        min-width: 50%;
    }

    input[type=button] {
        background-color: #fff;
        border: 0;
        border-radius: 2px;
        box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
        margin: 10px;
        padding: 0 0.5em;
        font: 400 18px Roboto, Arial, sans-serif;
        overflow: hidden;
        height: 40px;
        cursor: pointer;
        margin-left: 5px;
    }

    input[type=button]:hover {
        background: rgb(235, 235, 235);
    }

    input[type=button].button-primary {
        background-color: #1a73e8;
        color: white;
    }

    input[type=button].button-primary:hover {
        background-color: #1765cc;
    }

    input[type=button].button-secondary {
        background-color: white;
        color: #1a73e8;
    }

    input[type=button].button-secondary:hover {
        background-color: #d2e3fc;
    }

    #response-container {
        background-color: #fff;
        border: 0;
        border-radius: 2px;
        box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
        margin: 10px;
        padding: 0 0.5em;
        font: 400 18px Roboto, Arial, sans-serif;
        overflow: hidden;
        overflow: auto;
        max-height: 50%;
        max-width: 90%;
        background-color: rgba(255, 255, 255, 0.95);
        font-size: small;
    }

    #instructions {
        background-color: #fff;
        border: 0;
        border-radius: 2px;
        box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
        margin: 10px;
        padding: 0 0.5em;
        font: 400 18px Roboto, Arial, sans-serif;
        overflow: hidden;
        padding: 1rem;
        font-size: medium;
    }
</style>

<body class="subpage">
    <h2>Detalle de la Boleta</h2>
    @using (Html.BeginForm("RegistrarPedido", "DetalleBoletas", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Metodo de Pago </h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.IdModoDePago, "IdModoDePago", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdModoDePago", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdModoDePago, "", new { @class = "text-danger" })
        </div>
    </div>

    <br /><br />

    <div id="map"></div>

    <script>
        let map;
        let marker;
        let geocoder;
        let responseDiv;
        let response;

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 12,
                center: { lat: -12.06872, lng: -75.21653 },
                mapTypeControl: false,
            });
      
            geocoder = new google.maps.Geocoder();

            const inputText = document.createElement("input");

            inputText.type = "text";
            inputText.placeholder = "Ingrese su dirección de domicilio";

            const submitButton = document.createElement("input");

            submitButton.type = "button";
            submitButton.value = "Ubicar";
            submitButton.classList.add("button", "button-primary");

            const clearButton = document.createElement("input");

            clearButton.type = "button";
            clearButton.value = "Limpiar";
            clearButton.classList.add("button", "button-secondary");
            response = document.createElement("pre");
            response.id = "response";
            response.innerText = "";
            responseDiv = document.createElement("div");
            responseDiv.id = "response-container";
            responseDiv.appendChild(response);

            const instructionsElement = document.createElement("p");

            instructionsElement.id = "instructions";
            instructionsElement.innerHTML =
                "<strong>Instrucciones</strong>: Coloque el nombre de la ciudad al final de su dirección.";
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(inputText);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(submitButton);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(clearButton);
            map.controls[google.maps.ControlPosition.LEFT_TOP].push(instructionsElement);
            map.controls[google.maps.ControlPosition.LEFT_TOP].push(responseDiv);
            marker = new google.maps.Marker({
                map,
            });
            map.addListener("click", (e) => {
                geocode({ location: e.latLng });
            });
            submitButton.addEventListener("click", () =>
                geocode({ address: inputText.value })
            );
            clearButton.addEventListener("click", () => {
                clear();
            });
            clear();
        }

        function clear() {
            marker.setMap(null);
            responseDiv.style.display = "none";
        }

        function geocode(request) {
            clear();             
        geocoder
            .geocode(request)
            .then((result) => {
                const { results } = result;

                map.setCenter(results[0].geometry.location);
                marker.setPosition(results[0].geometry.location);
                marker.setMap(map);
                //responseDiv.style.display = "block";
                //response.innerText = JSON.stringify(result, null, 2);
                return results;
            })
            .catch((e) => {
                alert("Geocode was not successful for the following reason: " + e);
            });
        }

        window.initMap = initMap;
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBO0HqYaI32mKmbnEZh-_2CUZOjluYx3EM&callback=initMap" async defer></script>

    <br />
    <br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Siguiente" class="btn btn-default" />
        </div>
    </div>

</div>

        

    }
        
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
